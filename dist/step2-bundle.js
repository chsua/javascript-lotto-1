(()=>{"use strict";var n={314:(n,t,e)=>{e.d(t,{Z:()=>u});var r=e(537),o=e.n(r),i=e(645),a=e.n(i)()(o());a.push([n.id,"header {\n  display: flex;\n  height: 80px;\n  padding-left: 10%;\n  background-color: #4e5ba6;\n}\n\nheader > p {\n  color: #ffffff;\n  font-size: larger;\n}\n\nfooter {\n  display: flex;\n  height: 80px;\n  border-top: 0.5px solid rgba(0, 0, 0, 0.2);\n}\n\nfooter > p {\n  top: 35%;\n  margin: 0 auto;\n  color: #4e5ba6;\n}\n\n.mainPage {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  width: 40%;\n  height: auto;\n  min-height: 680px;\n  margin: 5% auto;\n  padding: 4%;\n  background-color: #ffffff;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  border-radius: 4px;\n}\n\nh1 {\n  text-align: center;\n}\n\np {\n  position: relative;\n  top: 10px;\n}\n\ninput {\n  width: 27px;\n  height: 27px;\n  border: 1px solid rgb(209, 209, 209);\n  border-radius: 4px;\n}\n\n.inputAmountArea,\n.inputLottoBonusArea {\n  position: relative;\n  bottom: 10px;\n  display: grid;\n  grid-template-columns: 3fr 1fr;\n  gap: 5%;\n}\n\n.inputAmountArea > label {\n  grid-column: 1/3;\n}\n\n#inputAmount {\n  width: 100%;\n  padding-left: 10px;\n}\n\nbutton {\n  color: #ffffff;\n  background-color: #4e5ba6;\n  border: 0;\n  border-radius: 4px;\n}\n\nbutton:hover {\n  cursor: pointer;\n}\n\nbutton:focus,\nbutton:hover {\n  font-size: large;\n  border: 3px solid black;\n}\n\n#randomLottoList {\n  height: 300px;\n  overflow: scroll;\n}\n\n.lottoImg {\n  margin-right: 3%;\n  font-size: xx-large;\n}\n\n#randomLottoList > div {\n  display: flex;\n  align-items: center;\n}\n\n#inputLottoBonus {\n  display: grid;\n  grid-template-rows: 30%;\n  grid-template-columns: 2fr 1fr;\n}\n\n#inputLottoBonus > p,\n.inputLottoBonusArea > p,\n.resultButton {\n  grid-column: 1/3;\n}\n\n#inputBonusNumber {\n  float: right;\n  text-align: right;\n}\n\n.eachInputLottoNumber,\n.eachInputBonusNumber {\n  text-align: center;\n}\n\n.resultButton,\n.restartButton {\n  width: 100%;\n  height: 50px;\n  margin-top: 7%;\n}\n\n.resultPage {\n  position: relative;\n  top: 28%;\n  width: 30%;\n  height: 480px;\n  margin: 0 auto;\n  padding: 5%;\n  text-align: center;\n  background-color: #ffffff;\n  border: 0;\n  border-radius: 4px;\n}\n\ntable {\n  width: 90%;\n  height: 50%;\n  margin: 0 auto;\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\n  border-collapse: collapse;\n}\n\nth,\ntd {\n  padding: 10px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n}\n\n.explainRate {\n  margin: 5% 0 10% 0;\n  font-weight: bold;\n  font-size: larger;\n}\n","",{version:3,sources:["webpack://./index.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,YAAY;EACZ,iBAAiB;EACjB,yBAAyB;AAC3B;;AAEA;EACE,cAAc;EACd,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,0CAA0C;AAC5C;;AAEA;EACE,QAAQ;EACR,cAAc;EACd,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,UAAU;EACV,YAAY;EACZ,iBAAiB;EACjB,eAAe;EACf,WAAW;EACX,yBAAyB;EACzB,qCAAqC;EACrC,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,SAAS;AACX;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,oCAAoC;EACpC,kBAAkB;AACpB;;AAEA;;EAEE,kBAAkB;EAClB,YAAY;EACZ,aAAa;EACb,8BAA8B;EAC9B,OAAO;AACT;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,WAAW;EACX,kBAAkB;AACpB;;AAEA;EACE,cAAc;EACd,yBAAyB;EACzB,SAAS;EACT,kBAAkB;AACpB;;AAEA;EACE,eAAe;AACjB;;AAEA;;EAEE,gBAAgB;EAChB,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,8BAA8B;AAChC;;AAEA;;;EAGE,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,iBAAiB;AACnB;;AAEA;;EAEE,kBAAkB;AACpB;;AAEA;;EAEE,WAAW;EACX,YAAY;EACZ,cAAc;AAChB;;AAEA;EACE,kBAAkB;EAClB,QAAQ;EACR,UAAU;EACV,aAAa;EACb,cAAc;EACd,WAAW;EACX,kBAAkB;EAClB,yBAAyB;EACzB,SAAS;EACT,kBAAkB;AACpB;;AAEA;EACE,UAAU;EACV,WAAW;EACX,cAAc;EACd,yCAAyC;EACzC,yBAAyB;AAC3B;;AAEA;;EAEE,aAAa;EACb,4CAA4C;AAC9C;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,iBAAiB;AACnB",sourcesContent:["header {\n  display: flex;\n  height: 80px;\n  padding-left: 10%;\n  background-color: #4e5ba6;\n}\n\nheader > p {\n  color: #ffffff;\n  font-size: larger;\n}\n\nfooter {\n  display: flex;\n  height: 80px;\n  border-top: 0.5px solid rgba(0, 0, 0, 0.2);\n}\n\nfooter > p {\n  top: 35%;\n  margin: 0 auto;\n  color: #4e5ba6;\n}\n\n.mainPage {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  width: 40%;\n  height: auto;\n  min-height: 680px;\n  margin: 5% auto;\n  padding: 4%;\n  background-color: #ffffff;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  border-radius: 4px;\n}\n\nh1 {\n  text-align: center;\n}\n\np {\n  position: relative;\n  top: 10px;\n}\n\ninput {\n  width: 27px;\n  height: 27px;\n  border: 1px solid rgb(209, 209, 209);\n  border-radius: 4px;\n}\n\n.inputAmountArea,\n.inputLottoBonusArea {\n  position: relative;\n  bottom: 10px;\n  display: grid;\n  grid-template-columns: 3fr 1fr;\n  gap: 5%;\n}\n\n.inputAmountArea > label {\n  grid-column: 1/3;\n}\n\n#inputAmount {\n  width: 100%;\n  padding-left: 10px;\n}\n\nbutton {\n  color: #ffffff;\n  background-color: #4e5ba6;\n  border: 0;\n  border-radius: 4px;\n}\n\nbutton:hover {\n  cursor: pointer;\n}\n\nbutton:focus,\nbutton:hover {\n  font-size: large;\n  border: 3px solid black;\n}\n\n#randomLottoList {\n  height: 300px;\n  overflow: scroll;\n}\n\n.lottoImg {\n  margin-right: 3%;\n  font-size: xx-large;\n}\n\n#randomLottoList > div {\n  display: flex;\n  align-items: center;\n}\n\n#inputLottoBonus {\n  display: grid;\n  grid-template-rows: 30%;\n  grid-template-columns: 2fr 1fr;\n}\n\n#inputLottoBonus > p,\n.inputLottoBonusArea > p,\n.resultButton {\n  grid-column: 1/3;\n}\n\n#inputBonusNumber {\n  float: right;\n  text-align: right;\n}\n\n.eachInputLottoNumber,\n.eachInputBonusNumber {\n  text-align: center;\n}\n\n.resultButton,\n.restartButton {\n  width: 100%;\n  height: 50px;\n  margin-top: 7%;\n}\n\n.resultPage {\n  position: relative;\n  top: 28%;\n  width: 30%;\n  height: 480px;\n  margin: 0 auto;\n  padding: 5%;\n  text-align: center;\n  background-color: #ffffff;\n  border: 0;\n  border-radius: 4px;\n}\n\ntable {\n  width: 90%;\n  height: 50%;\n  margin: 0 auto;\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\n  border-collapse: collapse;\n}\n\nth,\ntd {\n  padding: 10px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n}\n\n.explainRate {\n  margin: 5% 0 10% 0;\n  font-weight: bold;\n  font-size: larger;\n}\n"],sourceRoot:""}]);const u=a},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",r=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),r&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),r&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var u=0;u<this.length;u++){var c=this[u][0];null!=c&&(a[c]=!0)}for(var l=0;l<n.length;l++){var A=[].concat(n[l]);r&&a[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),e&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=e):A[2]=e),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),t.push(A))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,r=0;r<t.length;r++)if(t[r].identifier===n){e=r;break}return e}function r(n,r){for(var i={},a=[],u=0;u<n.length;u++){var c=n[u],l=r.base?c[0]+r.base:c[0],A=i[l]||0,s="".concat(l," ").concat(A);i[l]=A+1;var f=e(s),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==f)t[f].references++,t[f].updater(p);else{var d=o(p,r);r.byIndex=u,t.splice(u,0,{identifier:s,updater:d,references:1})}a.push(s)}return a}function o(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var u=e(i[a]);t[u].references--}for(var c=r(n,o),l=0;l<i.length;l++){var A=e(i[l]);0===t[A].references&&(t[A].updater(),t.splice(A,1))}i=c}}},569:n=>{var t={};n.exports=function(n,e){var r=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var r="";e.supports&&(r+="@supports (".concat(e.supports,") {")),e.media&&(r+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(r+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),r+=e.css,o&&(r+="}"),e.media&&(r+="}"),e.supports&&(r+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={id:r,exports:{}};return n[r](i,i.exports,e),i.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var r in t)e.o(t,r)&&!e.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:t[r]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),e.nc=void 0,(()=>{var n=e(379),t=e.n(n),r=e(795),o=e.n(r),i=e(569),a=e.n(i),u=e(565),c=e.n(u),l=e(216),A=e.n(l),s=e(589),f=e.n(s),p=e(314),d={};d.styleTagTransform=f(),d.setAttributes=c(),d.insert=a().bind(null,"head"),d.domAPI=o(),d.insertStyleElement=A(),t()(p.Z,d),p.Z&&p.Z.locals&&p.Z.locals;var m=function(n,t){return"innerHTML"===t?n.innerHTML="":"value"===t?n.value="":void 0},b=document.querySelector("#inputAmount"),y=document.querySelector("#inputAmountNext"),h=document.querySelector("#randomLottoList"),g=document.querySelector(".inputAmountArea");const E={addEvent:function(n){g.addEventListener("submit",(function(t){n(),t.preventDefault()}))},getInputAmount:function(){return b.value},clickInputAmount:function(n){m(b,"value"),n&&(this.showRandomLottoAmount(n),this.showRandomLottoList(n))},showRandomLottoAmount:function(n){document.querySelector(".randomLottoAmount").textContent="".concat(n.length)},showRandomLottoList:function(n){m(h,"innerHTML"),this.makeRandomLottoList(n),y.style.display="block"},makeRandomLottoList:function(n){var t=n.map((function(n){return function(n){return'<div><span class="lottoImg">🎟</span><span class="randomLottoNumbers">'.concat(n,"</span></div>")}(n)}));h.insertAdjacentHTML("beforeend",t.join(" "))}};var v=document.querySelectorAll(".eachInputLottoNumber"),C=document.querySelector(".eachInputBonusNumber"),B=document.querySelector("dialog");const w={addEvent:function(n){var t=document.querySelector(".inputLottoBonusArea"),e=document.querySelector(".restartButton");t.addEventListener("submit",(function(t){t.preventDefault(),n()})),e.addEventListener("click",this.clickRestart)},clickResult:function(n){n&&(B.showModal(),this.showResult(n))},getLottoBonus:function(){var n=[];v.forEach((function(t){n.push(+t.value),m(t,"value")}));var t=+C.value;return m(C,"value"),[n,t]},showResult:function(n){document.querySelectorAll(".winnerCount").forEach((function(t,e){return t.textContent=n[e]})),document.querySelector(".rate").textContent="".concat(n[n.length-1])},clickRestart:function(){B.close(),inputAmountNext.style.display="none"}};function S(n){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},S(n)}function x(n){return function(n){if(Array.isArray(n))return R(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||function(n,t){if(n){if("string"==typeof n)return R(n,t);var e=Object.prototype.toString.call(n).slice(8,-1);return"Object"===e&&n.constructor&&(e=n.constructor.name),"Map"===e||"Set"===e?Array.from(n):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?R(n,t):void 0}}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function R(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,r=new Array(t);e<t;e++)r[e]=n[e];return r}function I(n,t){for(var e=0;e<t.length;e++){var r=t[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,(void 0,o=function(n,t){if("object"!==S(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var r=e.call(n,"string");if("object"!==S(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(r.key),"symbol"===S(o)?o:String(o)),r)}var o}function k(n,t){return function(n,t){return t.get?t.get.call(n):t.value}(n,T(n,t,"get"))}function T(n,t,e){if(!t.has(n))throw new TypeError("attempted to "+e+" private field on non-instance");return t.get(n)}var L=new WeakMap;const N=function(){function n(t){var e,r,o;!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),o={writable:!0,value:void 0},function(n,t){if(t.has(n))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e=this,r=L),r.set(e,o),function(n,t,e){(function(n,t,e){if(t.set)t.set.call(n,e);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=e}})(n,T(n,t,"set"),e)}(this,L,t.sort((function(n,t){return n-t})))}var t,e;return t=n,(e=[{key:"getLottoString",value:function(){return k(this,L).join(", ")}},{key:"matchNumbers",value:function(n){return new Set([].concat(x(k(this,L)),x(n))).size}},{key:"matchBonus",value:function(n){return k(this,L).includes(n)}}])&&I(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),n}();Object.freeze({INPUT_PURCHASE_AMOUNT:"구입금액을 입력해 주세요.\n",INPUT_LOTTO_NUMBERS:"\n당첨 번호를 입력해 주세요.\n",INPUT_BONUS_NUMBER:"\n보너스 번호를 입력해 주세요.\n",INPUT_RESTART_COMMAND:"\n다시 시작하시겠습니까? (y/n)\n",RESTART:"\n게임을 다시 시작합니다.\n",QUIT:"\n게임을 종료합니다.\n"}),Object.freeze((function(n){return"".concat(n,"개를 구매했습니다.")}));var j=Object.freeze({NUMBER:"[ERROR] 숫자를 입력해주세요.",OVER_UNIT:"[ERROR] 천 원 이상 입력해주세요.",SIZE:"[ERROR] 1 ~ 45 사이의 서로 다른 숫자 6개를 입력해주세요.",RANGE:"[ERROR] 1 ~ 45 사이의 값을 입력하세요.",DUPLICATED:"[ERROR] 중복된 숫자가 있습니다.",DIVIDE:"[ERROR] 로또 1매 가격으로 나누어 떨어지는 금액을 입력하세요.",RESTART:"[ERROR] y 혹은 n으로 입력해주세요."}),O=Object.freeze({UNIT:1e3,MIN_RANGE:1,MAX_RANGE:45,SIZE:6,RANK:5}),U=Object.freeze({RESTART:"y",QUIT:"n"}),P=Object.freeze([5e3,5e4,15e5,3e7,2e9]);const M={generateRandomNumbers:function(){for(var n=[];n.length<O.SIZE;)this.generateRandomNumber(n);return n},generateRandomNumber:function(n){var t=Math.floor(Math.random()*(O.MAX_RANGE-O.MIN_RANGE+1))+O.MIN_RANGE;this.isDuplicated(n,t)||n.push(t)},isDuplicated:function(n,t){return n.includes(t)}};const z={getPrize:function(n){var t=0;return n.forEach((function(e,r){t+=P[r]*n[r]})),t},getProfit:function(n,t){return(this.getPrize(n)/(t*O.UNIT)*100).toFixed(1)}};function D(n){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},D(n)}function _(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,r=new Array(t);e<t;e++)r[e]=n[e];return r}function G(n,t){for(var e=0;e<t.length;e++){var r=t[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,(void 0,o=function(n,t){if("object"!==D(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var r=e.call(n,"string");if("object"!==D(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(r.key),"symbol"===D(o)?o:String(o)),r)}var o}const Z=function(){function n(t){!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),this.lotteries=[],this.rank=new Array(O.RANK).fill(0),this.generateLotteries(t/O.UNIT)}var t,e;return t=n,(e=[{key:"generateLotteries",value:function(n){var t=this;Array.from({length:n},(function(){var n=M.generateRandomNumbers();t.lotteries.push(new N(n))}))}},{key:"getLotteries",value:function(){return this.lotteries.map((function(n){return n.getLottoString()}))}},{key:"getRankResult",value:function(n,t){var e,r=this,o=new Array(O.RANK).fill(0);return this.lotteries.forEach((function(e){o[r.getRank(e.matchNumbers(n),e.matchBonus(t))]++})),[].concat(function(n){if(Array.isArray(n))return _(n)}(e=o)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(e)||function(n,t){if(n){if("string"==typeof n)return _(n,t);var e=Object.prototype.toString.call(n).slice(8,-1);return"Object"===e&&n.constructor&&(e=n.constructor.name),"Map"===e||"Set"===e?Array.from(n):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?_(n,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),[z.getProfit(o,this.lotteries.length)])}},{key:"getRank",value:function(n,t){if(!(n>9))return 6===n||7===n&&t?10-n:9-n}}])&&G(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),n}();function q(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,r=new Array(t);e<t;e++)r[e]=n[e];return r}const Y={purchaseAmount:function(n){this.inputIsInteger(n),this.purchaseAmountIsOverUnit(n),this.purchaseAmountDivideUnit(n)},inputIsInteger:function(n){if(!Number.isInteger(n))throw new Error(j.NUMBER)},purchaseAmountIsOverUnit:function(n){if(!(n>=O.UNIT))throw new Error(j.OVER_UNIT)},purchaseAmountDivideUnit:function(n){if(n%O.UNIT!=0)throw new Error(j.DIVIDE)},lottoNumbers:function(n){var t=this;n.forEach((function(n){t.inputIsInteger(n),t.numberInRange(n)})),this.lottoNumberSize(n),this.isDuplicated(n)},lottoNumberSize:function(n){if(n.length!==O.SIZE)throw new Error(j.SIZE)},isDuplicated:function(n){var t=new Set(n);if(n.length!==t.size)throw new Error(j.DUPLICATED)},numberInRange:function(n){if(!(n>=O.MIN_RANGE&&n<=O.MAX_RANGE))throw new Error(j.RANGE)},bonusNumber:function(n,t){var e;this.inputIsInteger(t),this.numberInRange(t),this.isDuplicated([].concat(function(n){if(Array.isArray(n))return q(n)}(e=n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(e)||function(n,t){if(n){if("string"==typeof n)return q(n,t);var e=Object.prototype.toString.call(n).slice(8,-1);return"Object"===e&&n.constructor&&(e=n.constructor.name),"Map"===e||"Set"===e?Array.from(n):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?q(n,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),[t]))},restartCommand:function(n){if(n!==U.RESTART&&n!==U.QUIT)throw new Error(j.RESTART)}};function W(n){return W="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},W(n)}function X(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,r=new Array(t);e<t;e++)r[e]=n[e];return r}function H(n,t){for(var e=0;e<t.length;e++){var r=t[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,Q(r.key),r)}}function Q(n){var t=function(n,t){if("object"!==W(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var r=e.call(n,"string");if("object"!==W(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"===W(t)?t:String(t)}const V=function(){function n(){var t,e,r;!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),t=this,r=void 0,(e=Q(e="lottoGame"))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,this.mainPageAddEvent(),this.resultAddEvent()}var t,e;return t=n,(e=[{key:"mainPageAddEvent",value:function(){var n=this;E.addEvent((function(){E.clickInputAmount(n.amountTurnLotteries())}))}},{key:"resultAddEvent",value:function(){var n=this;w.addEvent((function(){var t=n.inputLottoBonus(w.getLottoBonus());w.clickResult(t)}))}},{key:"amountTurnLotteries",value:function(){var n=+E.getInputAmount();try{return Y.purchaseAmount(n),this.makeLottoGame(n)}catch(n){alert(n.message)}}},{key:"makeLottoGame",value:function(n){return this.lottoGame=new Z(n),this.lottoGame.getLotteries()}},{key:"inputLottoBonus",value:function(n){var t,e,r=(e=2,function(n){if(Array.isArray(n))return n}(t=n)||function(n,t){var e=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=e){var r,o,i,a,u=[],c=!0,l=!1;try{if(i=(e=e.call(n)).next,0===t){if(Object(e)!==e)return;c=!1}else for(;!(c=(r=i.call(e)).done)&&(u.push(r.value),u.length!==t);c=!0);}catch(n){l=!0,o=n}finally{try{if(!c&&null!=e.return&&(a=e.return(),Object(a)!==a))return}finally{if(l)throw o}}return u}}(t,e)||function(n,t){if(n){if("string"==typeof n)return X(n,t);var e=Object.prototype.toString.call(n).slice(8,-1);return"Object"===e&&n.constructor&&(e=n.constructor.name),"Map"===e||"Set"===e?Array.from(n):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?X(n,t):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];try{return Y.lottoNumbers(o),Y.bonusNumber(o,i),this.generateLottoGameResult(o,i)}catch(n){alert(n.message)}}},{key:"generateLottoGameResult",value:function(n,t){return this.lottoGame.getRankResult(n,t)}}])&&H(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),n}();function $(n){return $="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},$(n)}function F(n,t){for(var e=0;e<t.length;e++){var r=t[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,(void 0,o=function(n,t){if("object"!==$(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var r=e.call(n,"string");if("object"!==$(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(r.key),"symbol"===$(o)?o:String(o)),r)}var o}(new(function(){function n(){!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n)}var t,e;return t=n,(e=[{key:"play",value:function(){this.controller=new V}}])&&F(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),n}())).play()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,